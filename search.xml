<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[微信个性化菜单的实现]]></title>
      <url>%2F2017%2F04%2F16%2F%E5%BE%AE%E4%BF%A1%E4%B8%AA%E6%80%A7%E5%8C%96%E8%8F%9C%E5%8D%95%E7%9A%84%E5%AE%9E%E7%8E%B0%2F</url>
      <content type="text"><![CDATA[微信扫描两个不同的二维码，关注的是相同的公众号，不同用户展示不同的菜单 最开始接到这个任务的时候，我还有点懵逼，微信居然还可以实现这个功能啊，虽然在很久以前做过微信公众号的开发，但做的几乎就是手机网页，没怎么关注微信的这些接口，所以没有什么思绪。 这个时候，就只有去官方文档上面找思路了，结果果真找到了。下面大致说一下我的思路：&gt; 通过实现带参数的二维码创建不同的二维码 创建个性化菜单 对用户进行分组 ###1，创建测试账号登陆http://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;t=sandbox/index微信扫码登录即可，然后配置接口信息，因为只是测试，所以我选择了最简单的新浪sae，这里有个注意点是，只有认证过的sae账户才可以，请大家一定要记住。 ###2，创建带参数的二维码参考此文档http://mp.weixin.qq.com/wiki/18/167e7d94df85d8389df6c94a7a8f78ba.html创建的二维码分为零时的和永久的，带参数的二维码主要是在post请求的时候传了一个scene_id,通过这个scene_id区分用户扫描的是哪一个二维码，然后通过这个二维码给用户进行分组即可。 接口调用说明：零时二维码：http请求方式: POST URL: https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=TOKEN POST数据格式：json POST数据例子：{&quot;expire_seconds&quot;: 604800, &quot;action_name&quot;: &quot;QR_SCENE&quot;, &quot;action_info&quot;: {&quot;scene&quot;: {&quot;scene_id&quot;: 123}}} 永久二维码：http请求方式: POST URL: https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=TOKEN POST数据格式：json POST数据例子：{&quot;action_name&quot;: &quot;QR_LIMIT_SCENE&quot;, &quot;action_info&quot;: {&quot;scene&quot;: {&quot;scene_id&quot;: 123}}} 或者也可以使用以下POST数据创建字符串形式的二维码参数： {&quot;action_name&quot;: &quot;QR_LIMIT_STR_SCENE&quot;, &quot;action_info&quot;: {&quot;scene&quot;: {&quot;scene_str&quot;: &quot;123&quot;}}} ###3，创建个性化菜单参考此文档http://mp.weixin.qq.com/wiki/0/c48ccd12b69ae023159b4bfaa7c39c20.html 个性化菜单和正常的菜单主要区别就是多了一个匹配规则matchrule， 例如 123456789101112131415161718192021222324252627282930313233343536 &#123; "button":[ &#123; "type":"click", "name":"今日歌曲", "key":"V1001_TODAY_MUSIC" &#125;, &#123; "name":"菜单", "sub_button":[ &#123; "type":"view", "name":"搜索", "url":"http://www.soso.com/" &#125;, &#123; "type":"view", "name":"视频", "url":"http://v.qq.com/" &#125;, &#123; "type":"click", "name":"赞一下我们", "key":"V1001_GOOD" &#125;] &#125;],"matchrule":&#123; "group_id":"2", "sex":"1", "country":"中国", "province":"广东", "city":"广州", "client_platform_type":"2" "language":"zh_CN" &#125;&#125; 在上面的json数据中，matchrule中的group_id你就可以用上面创建带参数的二维码中的scene_id来区分，其他的参数如果没有特殊要求不填即可。 注意：创建个性化菜单的时候必须要有一个默认菜单，在删除默认菜单后，个性化菜单也会被删除 ###3，对用户进行分组参考此文档http://mp.weixin.qq.com/wiki/8/d6d33cf60bce2a2e4fb10a21be9591b8.html 接口调用请求说明http请求方式: POST（请使用https协议） https://api.weixin.qq.com/cgi-bin/groups/members/update?access_token=ACCESS_TOKEN POST数据格式：json POST数据例子：{&quot;openid&quot;:&quot;oDF3iYx0ro3_7jD4HFRDfrjdCM58&quot;,&quot;to_groupid&quot;:108} ###4,代码实现我自己认为，像个性化菜单和自定义带参数的二维码没有必要代码生成，直接调用在线测试接口即可，所以，主要来讲一下用户分组的大致实现 怎么获取 scene_id用户在关注公众号的时候，会传过来一个EventKey，这个EventKey如果还没有关注的时候，值是会带一个qrscene_,例如qrscene_123,，而当用户已经关注了，再次扫描的时候直接传来的是123，这个123呢，就是我们所要获得的scene_id,也就是二维码中的参数。 ###5，效果实现]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Android布局优化技巧]]></title>
      <url>%2F2017%2F02%2F16%2FAndroid%E5%B8%83%E5%B1%80%E5%B0%8F%E6%8A%80%E5%B7%A7%2F</url>
      <content type="text"><![CDATA[include, merge , viewstub标签1，viewStub其实就是一个宽和高为0的view，通过setVisiblity或者inflate才能加载出来，从而达到延迟加载的效果2，include最常见的问题就是findViewById查找不到目标控件,先find include标签的id，再来找里面的viewId3，merge标签继承Activiy，里面有一个LinerLayout对象,在使用merge标签的时候，可以减少布局的层级 1234567891011121314151617/** * Exercise &lt;merge /&gt; tag in XML files. */ public class Merge extends Activity &#123; private LinearLayout mLayout; @Override protected void onCreate(Bundle icicle) &#123; super.onCreate(icicle); mLayout = new LinearLayout(this); mLayout.setOrientation(LinearLayout.VERTICAL); LayoutInflater.from(this).inflate(R.layout.merge_tag, mLayout); setContentView(mLayout); &#125; public ViewGroup getLayout() &#123; return mLayout; &#125; &#125; 12345678910111213141516&lt;merge xmlns:android="http://schemas.android.com/apk/res/android"&gt;&lt;ImageView android:layout_width="fill_parent" android:layout_height="fill_parent" android:scaleType="center" android:src="@drawable/golden_gate" /&gt;&lt;TextView android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_marginBottom="20dip" android:layout_gravity="center_horizontal|bottom" android:padding="12dip" android:background="#AA000000" android:textColor="#ffffffff" android:text="Golden Gate" /&gt;&lt;/merge&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F02%2F16%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
